// This file was automatically generated by EbnfStudio; don't modify it!
#include "AoSynTree.h"
using namespace Ao;

SynTree::SynTree(quint16 r, const Token& t ):d_tok(r){
	d_tok.d_lineNr = t.d_lineNr;
	d_tok.d_colNr = t.d_colNr;
	d_tok.d_sourcePath = t.d_sourcePath;
}

const char* SynTree::rToStr( quint16 r ) {
	switch(r) {
		case R_AddOp: return "AddOp";
		case R_AliasType: return "AliasType";
		case R_ArrayType: return "ArrayType";
		case R_Assembler: return "Assembler";
		case R_AssigOrCall: return "AssigOrCall";
		case R_Attributes: return "Attributes";
		case R_Body: return "Body";
		case R_Case: return "Case";
		case R_CaseLabels: return "CaseLabels";
		case R_CaseStat: return "CaseStat";
		case R_ConstDecl: return "ConstDecl";
		case R_ConstExpr: return "ConstExpr";
		case R_DeclSeq: return "DeclSeq";
		case R_Definition: return "Definition";
		case R_Designator: return "Designator";
		case R_Element: return "Element";
		case R_Expr: return "Expr";
		case R_ExprList: return "ExprList";
		case R_FPSection: return "FPSection";
		case R_Factor: return "Factor";
		case R_FieldDecl: return "FieldDecl";
		case R_FieldList: return "FieldList";
		case R_ForStat: return "ForStat";
		case R_FormalPars: return "FormalPars";
		case R_IdentDef: return "IdentDef";
		case R_IdentList: return "IdentList";
		case R_IfStat: return "IfStat";
		case R_ImportList: return "ImportList";
		case R_LoopStat: return "LoopStat";
		case R_Module: return "Module";
		case R_MulOp: return "MulOp";
		case R_ObjectType: return "ObjectType";
		case R_PointerType: return "PointerType";
		case R_ProcDecl: return "ProcDecl";
		case R_ProcHead: return "ProcHead";
		case R_ProcedureType: return "ProcedureType";
		case R_Qualident: return "Qualident";
		case R_RecordType: return "RecordType";
		case R_Relation: return "Relation";
		case R_RepeatStat: return "RepeatStat";
		case R_ReturnStat: return "ReturnStat";
		case R_Set: return "Set";
		case R_SimpleExpr: return "SimpleExpr";
		case R_StatBlock: return "StatBlock";
		case R_StatSeq: return "StatSeq";
		case R_Statement: return "Statement";
		case R_SysFlag: return "SysFlag";
		case R_Term: return "Term";
		case R_Type: return "Type";
		case R_TypeDecl: return "TypeDecl";
		case R_VarDecl: return "VarDecl";
		case R_WhileStat: return "WhileStat";
		case R_WithStat: return "WithStat";
		case R_comment_: return "comment";
		case R_number: return "number";
	default: if(r<R_First) return tokenTypeName(r); else return "";
}
}
